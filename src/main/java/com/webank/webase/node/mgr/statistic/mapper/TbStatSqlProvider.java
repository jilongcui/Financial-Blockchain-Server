package com.webank.webase.node.mgr.statistic.mapper;

import com.webank.webase.node.mgr.statistic.entity.TbStat;
import org.apache.ibatis.jdbc.SQL;

public class TbStatSqlProvider {

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_stat
     *
     * @mbg.generated
     */
    public static final String ALL_COLUMN_FIELDS = "id,group_id,block_cycle,tps,block_number,block_size,stat_timestamp,create_time,modify_time";

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_stat
     *
     * @mbg.generated
     */
    public String insertSelective(TbStat record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("tb_stat");
        if (record.getGroupId() != null) {
            sql.VALUES("group_id", "#{groupId,jdbcType=INTEGER}");
        }
        if (record.getBlockCycle() != null) {
            sql.VALUES("block_cycle", "#{blockCycle,jdbcType=DOUBLE}");
        }
        if (record.getTps() != null) {
            sql.VALUES("tps", "#{tps,jdbcType=INTEGER}");
        }
        if (record.getBlockNumber() != null) {
            sql.VALUES("block_number", "#{blockNumber,jdbcType=INTEGER}");
        }
        if (record.getBlockSize() != null) {
            sql.VALUES("block_size", "#{blockSize,jdbcType=INTEGER}");
        }
        if (record.getStatTimestamp() != null) {
            sql.VALUES("stat_timestamp", "#{statTimestamp,jdbcType=VARCHAR}");
        }
        if (record.getCreateTime() != null) {
            sql.VALUES("create_time", "#{createTime,jdbcType=TIMESTAMP}");
        }
        if (record.getModifyTime() != null) {
            sql.VALUES("modify_time", "#{modifyTime,jdbcType=TIMESTAMP}");
        }
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_stat
     *
     * @mbg.generated
     */
    public String updateByPrimaryKeySelective(TbStat record) {
        SQL sql = new SQL();
        sql.UPDATE("tb_stat");
        if (record.getGroupId() != null) {
            sql.SET("group_id = #{groupId,jdbcType=INTEGER}");
        }
        if (record.getBlockCycle() != null) {
            sql.SET("block_cycle = #{blockCycle,jdbcType=DOUBLE}");
        }
        if (record.getTps() != null) {
            sql.SET("tps = #{tps,jdbcType=INTEGER}");
        }
        if (record.getBlockNumber() != null) {
            sql.SET("block_number = #{blockNumber,jdbcType=INTEGER}");
        }
        if (record.getBlockSize() != null) {
            sql.SET("block_size = #{blockSize,jdbcType=INTEGER}");
        }
        if (record.getStatTimestamp() != null) {
            sql.SET("stat_timestamp = #{statTimestamp,jdbcType=VARCHAR}");
        }
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{createTime,jdbcType=TIMESTAMP}");
        }
        if (record.getModifyTime() != null) {
            sql.SET("modify_time = #{modifyTime,jdbcType=TIMESTAMP}");
        }
        sql.WHERE("id = #{id,jdbcType=INTEGER}");
        return sql.toString();
    }
}
